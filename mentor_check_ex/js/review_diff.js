(()=>{"use strict";var e,t,r,n,i={108:(e,t,r)=>{r.a(e,(async(e,t)=>{try{const e=new(r(445).w);await e.getSettings();const n=document.querySelector("#page-content-wrapper > .container-fluid > .row > .col-lg-12");if(n){n.innerHTML=`\n<div class="header flex column-gap-20">\n  <div class="height-full">\n    <div>\n      <label><input type="checkbox" id="ignorews" checked> 空白を無視する</label>\n      <label><input type="checkbox" id="wrap_lines"> 折り返す</label>\n      <label><input type="checkbox" id="line_numbers"> 行番号</label>\n      <label><input type="checkbox" id="sidebar"> サイドバー</label>\n      <small id="whenDiffFromGit"></small>\n    </div>\n    <div>\n      <a href="#" id="VALIDATOR-LINK" style="display: none">Validator</a>\n    </div>\n  </div>\n  <div class="controller">\n    <a href="#" class="prev" title="prev">▲</a>\n    <span class="numChanges">No diffs</span>\n    <a href="#" class="next" title="next">▼</a>\n  </div>\n  <div class="labels">\n    <div class="student">受講生</div>\n    <div class="review">課題レビュー基準</div>\n  </div>\n  <div class="message_area"></div>\n</div>\n<div class="mergely-area">\n  <div class="mergely-full-screen-8">\n    <div class="mergely-resizer">\n      <div id="mergely"><p style="font-size:2em" id="NOW-LOADING">Loading...</p></div>\n    </div>\n  </div>\n</div>\n<div style="display: none">\n  <form action="https://validator.w3.org/nu/" method="POST" target="_blank" enctype="multipart/form-data" id="HTML-VALIDATOR-FORM">\n    <textarea name="content"></textarea>\n    <input type="hidden" name="prefill" value="0">\n    <input type="hidden" name="doctype" value="Inline">\n    <input type="hidden" name="prefill_doctype" value="html401">\n    <input type="hidden" name="group" value="0">\n  </form>\n\n  <form action="https://jigsaw.w3.org/css-validator/validator" method="POST" enctype="multipart/form-data" target="_blank" id="CSS-VALIDATOR-FORM">\n    <textarea name="text"></textarea>\n    <input type="hidden" name="profile" value="css3svg">\n    <input type="hidden" name="usermedium" value="all">\n    <input type="hidden" name="type" value="none">\n    <input type="hidden" name="warning" value="1">\n    <input type="hidden" name="vextwarning" value="">\n    <input type="hidden" name="lang" value="ja">\n  </form>\n  \n  <form action="https://a7.sakuratan.com/final-lp-checker/index2.php" method="POST" target="_blank" id="FINAL-EXAM-CHECKER">\n    <textarea name="html"></textarea>\n    <textarea name="css"></textarea>\n    <textarea name="js"></textarea>\n  </form>\n  <input type="hidden" id="diffFromGit" value="${e.diffFromGit?1:0}">\n</div>\n`,document.title="課題レビューDIFF";const t=(e,t,r)=>{const n=chrome.runtime.getURL(e),i=document.createElement("script");i.src=n,!0===r&&(i.type="module"),i.addEventListener("load",(()=>t())),document.body.appendChild(i)};t("js/review_diff/mergely.min.js",(()=>{t("js/review_diff/main.js",(()=>{}),!0)}))}t()}catch(e){t(e)}}),1)},445:(e,t,r)=>{r.d(t,{w:()=>n});class n{static DEFAULT={interval:30,chime:!1,notify:!1,smartIfSimple:!1,new_version:!1,username:"",password:"",volume:50,course_list:[],watchSlack:!1,darkmode:!1,diff:!0,diffFromGit:!1,curriculumSubMenu:!1,curriculums:[]};props=n.DEFAULT;constructor(){}async getSettings(){this.props=await chrome.storage.local.get(n.DEFAULT)}async setSettings(){await chrome.storage.local.set(this.props)}get interval(){return this.props.interval}get chime(){return this.props.chime}get notify(){return this.props.notify}get smartIfSimple(){return this.props.smartIfSimple}get new_version(){return this.props.new_version}get username(){return this.props.username}get password(){return this.props.password}get volume(){return this.props.volume}get course_list(){return this.props.course_list}get watchSlack(){return this.props.watchSlack}get darkmode(){return this.props.darkmode}get diff(){return this.props.diff}get diffFromGit(){return this.props.diffFromGit}get curriculumSubMenu(){return this.props.curriculumSubMenu}get curriculums(){return this.props.curriculums}set interval(e){this.props.interval=e}set chime(e){this.props.chime=e}set notify(e){this.props.notify=e}set smartIfSimple(e){this.props.smartIfSimple=e}set new_version(e){this.props.new_version=e}set username(e){this.props.username=e}set password(e){this.props.password=e}set volume(e){this.props.volume=e}set course_list(e){this.props.course_list=e}set watchSlack(e){this.props.watchSlack=e}set darkmode(e){this.props.darkmode=e}set diff(e){this.props.diff=e}set diffFromGit(e){this.props.diffFromGit=e}set curriculumSubMenu(e){this.props.curriculumSubMenu=e}set curriculums(e){this.props.curriculums=e}}}},s={};function a(e){var t=s[e];if(void 0!==t)return t.exports;var r=s[e]={exports:{}};return i[e](r,r.exports,a),r.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",r="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",n=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},a.a=(i,s,a)=>{var o;a&&((o=[]).d=-1);var p,l,d,u=new Set,c=i.exports,m=new Promise(((e,t)=>{d=t,l=e}));m[t]=c,m[e]=e=>(o&&e(o),u.forEach(e),m.catch((e=>{}))),i.exports=m,s((i=>{var s;p=(i=>i.map((i=>{if(null!==i&&"object"==typeof i){if(i[e])return i;if(i.then){var s=[];s.d=0,i.then((e=>{a[t]=e,n(s)}),(e=>{a[r]=e,n(s)}));var a={};return a[e]=e=>e(s),a}}var o={};return o[e]=e=>{},o[t]=i,o})))(i);var a=()=>p.map((e=>{if(e[r])throw e[r];return e[t]})),l=new Promise((t=>{(s=()=>t(a)).r=0;var r=e=>e!==o&&!u.has(e)&&(u.add(e),e&&!e.d&&(s.r++,e.push(s)));p.map((t=>t[e](r)))}));return s.r?l:a()}),(e=>(e?d(m[r]=e):l(c),n(o)))),o&&o.d<0&&(o.d=0)},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a(108)})();